#!/bin/bash

dpkg -l php

var1=`echo $?`

if [ $var1 -ne 0 ]

then

        echo "php is not installed"
fi


dpkg -l mysql-server

var2=`echo $?`

if [ $var2 -ne 0 ]

then

		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password Rh12eL98'
	
		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password Rh12eL98'

                apt-get install mysql-server -y

fi

dpkg -l nginx

var3=`echo $?`

if [ $var3 -ne 0 ]

then

echo "deb http://ppa.launchpad.net/nginx/stable/ubuntu $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/nginx-stable.list

        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C300EE8C

        sudo apt-get update

        sudo apt-get install nginx php-mysql php-fpm -y

fi


###now we will ask user to enter domain name

echo "Enter domain name"

read dom

echo "127.0.0.1 $dom" >> /etc/hosts



#########Changing default nginx conf to handle PHP environment.





cd /etc/nginx/sites-available

mv default __default.orig

cat > default <<- "EOF"

server {

        listen 80;

        listen [::]:80 default_server;

                # SSL configuration

        #

        # listen 443 ssl default_server;

        # listen [::]:443 ssl default_server;

        #

                 # Note: You should disable gzip for SSL traffic.

        # See: https://bugs.debian.org/773332
	
		#

        # Read up on ssl_ciphers to ensure a secure configuration.

        # See: https://bugs.debian.org/765782

        #

        # Self signed certs generated by the ssl-cert package

        # Don't use them in a production server!

        #

        # include snippets/snakeoil.conf;


        root /usr/share/nginx/html;



        # Add index.php to the list if you are using PHP

                index index.php index.html;



        server_name _;



        location / {

                # First attempt to serve request as file, then
			
				 # as directory, then fall back to displaying a 404.

                try_files $uri $uri/ =404;

        }



        # pass PHP scripts to FastCGI server

        #

        #location ~ \.php$ {

        #       include snippets/fastcgi-php.conf;

                 #

        #       # With php-fpm (or other unix sockets):

        #       fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;

        #       # With php-cgi (or other tcp sockets):

        #       fastcgi_pass 127.0.0.1:9000;

        #}

                # deny access to .htaccess files, if Apache's document root

        # concurs with nginx's one

        #

        #location ~ /\.ht {

        #       deny all;

        #}
}

# Virtual Host configuration for example.com

#

# You can move that to a different file under sites-available/ and symlink that

# to sites-enabled/ to enable it.

#

#server {

#       listen 80;

#       listen [::]:80;

#

#       server_name example.com;

#

#       root /var/www/example.com;

#       index index.html;

#

#       location / {

#               try_files $uri $uri/ =404;

#       }

#}

EOF

######Creating domain file

cat > $dom <<- "EOF"

server {

        listen   80;





        root /usr/share/nginx/html/wordpress;

        index index.php index.html;



        server_name ;



        location / {

                try_files $uri $uri/ =404;

        }



        error_page 404 /404.html;



        error_page 500 502 503 504 /50x.html;

                location = /50x.html {

              root /usr/share/nginx/html;

        }
		
		# pass the PHP scripts to FastCGI server listening on the php-fpm socket

        location ~ \.php$ {

                try_files $uri =404;

                fastcgi_pass unix:/run/php/php7.0-fpm.sock;

                fastcgi_index index.php;

                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

                include fastcgi_params;



        }



}

EOF

sed -i "s/server_name/server_name $dom/g" $dom

cd /etc/nginx/sites-enabled/

ln -s /etc/nginx/sites-available/$dom $dom

cd /usr/share/nginx/html

wget https://wordpress.org/latest.tar.gz

tar xvf latest.tar.gz



#####Creating MySQL database for wordpress

/usr/bin/mysqladmin -uroot -pRh12eL98 create example.com_db

cd /usr/share/nginx/html/wordpress

cp wp-config-sample.php wp-config.php



## Changing Default parameters as per our use case

sed -i 's/database_name_here/example.com_db/g' /usr/share/nginx/html/wordpress/wp-config.php

sed -i 's/username_here/root/g' /usr/share/nginx/html/wordpress/wp-config.php

sed -i 's/password_here/Rh12eL98/g' /usr/share/nginx/html/wordpress/wp-config.php



########Set permissions

chown -R www-data:www-data /usr/share/nginx/html/wordpress

chmod -R 775 /usr/share/nginx/html/wordpress

service nginx restart

/etc/init.d/php7.0-fpm restart


echo "Hey website is ready ,open  in browser"
